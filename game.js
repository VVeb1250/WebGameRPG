const scene = document.getElementById("scene");
const menu = document.getElementById("menu");
const statusBox = document.getElementById("status");

const logBox = document.getElementById("log");
const logSound = document.getElementById("log-sound");

const player = {
  name: "üßù‚Äç‚ôÇÔ∏è ‡∏Æ‡∏µ‡πÇ‡∏£‡πà",
  hp: 100,
  maxHp: 100,
  attack: 20,
  emoji: "üßù‚Äç‚ôÇÔ∏è"
};

const enemies = [
  { name: "Goblin", emoji: "üë∫", hp: 60, attack: 12 },
  { name: "Slime", emoji: "üü¢", hp: 40, attack: 8 },
  { name: "Dragon", emoji: "üêâ", hp: 100, attack: 20 }
];

let events = [];

async function loadEvents() {
  const res = await fetch("events.json");
  events = await res.json();
}
  

let currentEnemy = null;

function startBattle() {
  currentEnemy = JSON.parse(JSON.stringify(randomEnemy())); // copy
  renderScene();
  renderMenu();
}

function randomEnemy() {
  return enemies[Math.floor(Math.random() * enemies.length)];
}

function renderScene() {
  scene.innerHTML = `${player.emoji} ‚öîÔ∏è ${currentEnemy.emoji}`;
  statusBox.innerHTML = `
    <p>${player.name} ‚ù§Ô∏è ${player.hp} / ${player.maxHp}</p>
    <p>${currentEnemy.name} ‚ù§Ô∏è ${currentEnemy.hp}</p>
  `;
}

function renderMenu() {
  menu.innerHTML = `
    <button class="button" onclick="attack()">üó° ‡πÇ‡∏à‡∏°‡∏ï‡∏µ</button>
    <button class="button" onclick="defend()">üõ° ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô</button>
  `;
}

function attack() {
  const dmg = Math.floor(Math.random() * player.attack);
  currentEnemy.hp -= dmg;
  log(`‡∏Ñ‡∏∏‡∏ì‡πÇ‡∏à‡∏°‡∏ï‡∏µ ${currentEnemy.name} ‡πÑ‡∏î‡πâ ${dmg} ‡∏î‡∏≤‡πÄ‡∏°‡∏à`);

  if (currentEnemy.hp <= 0) {
    log(`${currentEnemy.name} ‡∏ñ‡∏π‡∏Å‡∏õ‡∏£‡∏≤‡∏ö! üéâ`);
    menu.innerHTML = `<button class="button" onclick="nextEvent()">‚ñ∂ ‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡∏ï‡πà‡∏≠</button>`;
    return;
  }

  enemyTurn();
}

function defend() {
  log(`‡∏Ñ‡∏∏‡∏ì‡∏ï‡∏±‡πâ‡∏á‡∏£‡∏±‡∏ö ‡∏•‡∏î‡∏î‡∏≤‡πÄ‡∏°‡∏à‡∏Ñ‡∏£‡∏∂‡πà‡∏á‡∏´‡∏ô‡∏∂‡πà‡∏á‡πÉ‡∏ô‡πÄ‡∏ó‡∏¥‡∏£‡πå‡∏ô‡∏ô‡∏µ‡πâ`);
  enemyTurn(true);
}

function enemyTurn(playerDefending = false) {
  setTimeout(() => {
    let dmg = Math.floor(Math.random() * currentEnemy.attack);
    if (playerDefending) dmg = Math.floor(dmg / 2);

    player.hp -= dmg;
    log(`${currentEnemy.name} ‡πÇ‡∏à‡∏°‡∏ï‡∏µ‡∏Ñ‡∏∏‡∏ì ‡πÑ‡∏î‡πâ ${dmg} ‡∏î‡∏≤‡πÄ‡∏°‡∏à`);

    if (player.hp <= 0) {
      log(`‡∏Ñ‡∏∏‡∏ì‡∏û‡πà‡∏≤‡∏¢‡πÅ‡∏û‡πâ... üíÄ`);
      menu.innerHTML = `<button class="button" onclick="restart()">üîÅ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà</button>`;
    } else {
      renderScene();
    }
  }, 800);
}

function nextEvent() {
    const event = events[Math.floor(Math.random() * events.length)];
    scene.innerHTML = `${event.emoji}`;
    statusBox.innerHTML = `<p>${event.text}</p>`;
    menu.innerHTML = "";
  
    // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
    if (event.choices) {
      event.choices.forEach(choice => {
        const btn = document.createElement("button");
        btn.className = "button";
        btn.textContent = choice.text;
        btn.onclick = () => handleEffect(choice.effect);
        menu.appendChild(btn);
      });
    } else {
      handleEffect(event.effect);
    }
  }
   

function restart() {
    player.hp = player.maxHp;
    startBattle();
}

function log(text) {
    const p = document.createElement("p");
    p.textContent = text;
    p.classList.add("log-entry"); // for animation
    logBox.insertBefore(p, logBox.firstChild);
  
    if (logSound) {
        logSound.currentTime = 0;
        logSound.play().catch(() => {}); // ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô warning ‡∏à‡∏≤‡∏Å autoplay
      }
  
    // Limit to 10 lines
    while (logBox.childNodes.length > 10) {
      logBox.removeChild(logBox.lastChild);
    }
  
    logBox.scrollTop = 0;
  }
  

window.onload = async () => {
    await loadEvents();
    showIntro();
  };
  
function showIntro() {
    scene.innerHTML = `üåÑ`;
    statusBox.innerHTML = `
    <p>‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠‡∏ô‡∏±‡∏Å‡∏ú‡∏à‡∏ç‡∏†‡∏±‡∏¢‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤‡∏Ñ‡∏ô‡∏´‡∏ô‡∏∂‡πà‡∏á ‡∏ó‡∏µ‡πà‡∏≠‡∏≠‡∏Å‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡∏à‡∏≤‡∏Å‡∏´‡∏°‡∏π‡πà‡∏ö‡πâ‡∏≤‡∏ô‡πÄ‡∏•‡πá‡∏Å ‡πÜ ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏•‡πâ‡∏≤‡πÉ‡∏ô‡πÇ‡∏•‡∏Å‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡πÉ‡∏´‡∏ç‡πà...</p>
    <p>‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡∏Ç‡πâ‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ï‡πá‡∏°‡πÑ‡∏õ‡∏î‡πâ‡∏ß‡∏¢‡∏≠‡∏±‡∏ô‡∏ï‡∏£‡∏≤‡∏¢ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡∏∂‡∏Å‡∏•‡∏±‡∏ö ‡πÅ‡∏•‡∏∞‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏≠‡∏≤‡∏à‡∏Ñ‡∏≤‡∏î‡πÄ‡∏î‡∏≤</p>
    `;
    menu.innerHTML = `<button class="button" onclick="startJourney()">‚ñ∂ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á</button>`;
}
  
function startJourney() {
    player.hp = player.maxHp;
    nextEvent(); // ‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡∏™‡∏π‡πà‡πÄ‡∏´‡∏ï‡∏∏‡∏Å‡∏≤‡∏£‡∏ì‡πå‡πÅ‡∏£‡∏Å
}
  
